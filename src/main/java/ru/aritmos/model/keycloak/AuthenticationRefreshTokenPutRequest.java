/*
 * AuthService
 * Для работы со swagger необходимо выполнить обязательный рест-запрос \"`/authorization`\". В результате этого запроса будет получен идентификатор сессии (sid) — обязательный параметр для других рест-запросов.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.aritmos.model.keycloak;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.serde.annotation.Serdeable;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.annotation.Generated;
import java.util.Objects;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/** AuthenticationRefreshTokenPutRequest */
@Serdeable
@JsonPropertyOrder(AuthenticationRefreshTokenPutRequest.JSON_PROPERTY_ACCESS_TOKEN)
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class AuthenticationRefreshTokenPutRequest {

  public static final String JSON_PROPERTY_ACCESS_TOKEN = "access_token";

  @Nullable(inherited = true)
  @Schema(name = "access_token", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
  private String accessToken;

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationRefreshTokenPutRequest authenticationRefreshTokenPutRequest =
        (AuthenticationRefreshTokenPutRequest) o;
    return Objects.equals(accessToken, authenticationRefreshTokenPutRequest.accessToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken);
  }

  @Override
  public String toString() {
    return "AuthenticationRefreshTokenPutRequest(" + "accessToken: " + getAccessToken() + ")";
  }
}
