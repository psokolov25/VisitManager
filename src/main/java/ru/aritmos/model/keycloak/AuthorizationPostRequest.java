/*
 * AuthService
 * Для работы со swagger необходимо выполнить обязательный рест-запрос \"`/authorization`\". В результате этого запроса будет получен идентификатор сессии (sid) — обязательный параметр для других рест-запросов.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.aritmos.model.keycloak;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.serde.annotation.Serdeable;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.annotation.Generated;
import java.util.Objects;
import lombok.Data;

/** AuthorizationPostRequest */
@Serdeable
@JsonPropertyOrder({
  AuthorizationPostRequest.JSON_PROPERTY_USERNAME,
  AuthorizationPostRequest.JSON_PROPERTY_PASSWORD
})
@Data
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class AuthorizationPostRequest {

  public static final String JSON_PROPERTY_USERNAME = "username";
  public static final String JSON_PROPERTY_PASSWORD = "password";

  @Nullable(inherited = true)
  @Schema(name = "username", example = "manager", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
  private String username;

  @Nullable(inherited = true)
  @Schema(name = "password", example = "1234", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
  private String password;

  /**
   * Set username in a chainable fashion.
   *
   * @return The same instance of AuthorizationPostRequest for chaining.
   */
  public AuthorizationPostRequest username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Set password in a chainable fashion.
   *
   * @return The same instance of AuthorizationPostRequest for chaining.
   */
  public AuthorizationPostRequest password(String password) {
    this.password = password;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationPostRequest authorizationPostRequest = (AuthorizationPostRequest) o;
    return Objects.equals(username, authorizationPostRequest.username)
        && Objects.equals(password, authorizationPostRequest.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password);
  }

  @Override
  public String toString() {
    return "AuthorizationPostRequest("
        + "username: "
        + getUsername()
        + ", "
        + "password: "
        + getPassword()
        + ")";
  }
}
